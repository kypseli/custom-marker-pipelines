pipeline {
  options { 
    buildDiscarder(logRotator(numToKeepStr: '7')) 
    timestamps()
  }
  agent { 
    label 'docker'
  }
  stages {
    stage('Build and Verify') {
      steps {
        gitShortCommit(7)
        echo "${SHORT_COMMIT}"
        container('maven') {
          sh 'mvn verify'
        }
      }
    }
    stage('Quality Analysis') {
      environment {
          SONAR = credentials('sonar.beedemo')
      }
      steps {
          withSonarQubeEnv('beedemo') {
              container('maven') {
                  sh 'mvn -Dsonar.scm.disabled=True -Dsonar.host.url=https://sonar.k8s.beedemo.net -Dsonar.login=$SONAR -Dsonar.branch=$BRANCH_NAME sonar:sonar'
              }
          }
      }
    }
    stage('Quality Gate') {
        options {
            timeout(time: 10, unit: 'MINUTES') 
        }
        agent none
        steps {
            script {
                def qg = waitForQualityGate()
                if (qg.status != 'OK') {
                    error "Pipeline failure due to quality gate failure: ${qg.status}"
                }
            }
        }
    }
    stage('Deploy') {
      options {
          timeout(time: 5, unit: 'MINUTES') 
      }
      environment {
          DOCKER_TAG = "${BUILD_NUMBER}-${SHORT_COMMIT}"
      }
      when {
          branch 'master'
      }
      input {
          message "Deploy to prod?"
          ok "Yes"
          submitter "kypseli*ops"
      }
      steps {
        //todo real deploy
        echo 'deploying'
        sleep(10)
        script {
          def repoName = sh(returnStdout: true, script:'basename `git rev-parse --show-toplevel`')
         }
        publishEvent generic("$repoName")
      }
    }
  }
}
